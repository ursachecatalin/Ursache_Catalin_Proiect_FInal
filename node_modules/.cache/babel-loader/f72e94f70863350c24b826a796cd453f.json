{"ast":null,"code":"var _jsxFileName = \"D:\\\\CURS Practica\\\\Ursache_Catalin_Proiect_FInal\\\\src\\\\Components\\\\Experience.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Nav from \"./Common/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Experience() {\n  _s();\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('Auth Token');\n    navigate('/login');\n  };\n\n  let navigate = useNavigate();\n  useEffect(() => {\n    let authToken = sessionStorage.getItem('Auth Token');\n    console.log(authToken);\n\n    if (authToken) {\n      navigate('/experience');\n    }\n\n    if (!authToken) {\n      navigate('/login');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Experience Page\", /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logoutbutton\",\n      onClick: handleLogout,\n      children: \"Log out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"experienceBoxContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ComponentTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExperienceBoxAddArea, {\n        handleDateToPresent: handleDateToPresent,\n        handleExperienceAddInputs: handleExperienceAddInputs,\n        handleExperienceClearInputs: handleExperienceClearInputs,\n        handleExperienceEditInputs: handleExperienceEditInputs,\n        experienceInfoEditable: experienceInfoEditable,\n        dateIsToPresent: dateIsToPresent,\n        cancelExperienceInfoEditable: cancelExperienceInfoEditable,\n        handleCancelEdit: handleCancelEdit,\n        role: role,\n        setRole: setRole,\n        employer: employer,\n        setEmployer: setEmployer,\n        city: city,\n        setCity: setCity,\n        summary: summary,\n        setSummary: setSummary,\n        roleValidity: roleValidity,\n        setRoleValidity: setRoleValidity,\n        employerValidity: employerValidity,\n        setEmployerValidity: setEmployerValidity,\n        cityValidity: cityValidity,\n        setCityValidity: setCityValidity,\n        summaryValidity: summaryValidity,\n        setSummaryValidity: setSummaryValidity,\n        clear: clear,\n        setClear: setClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExperienceBoxEditArea, {\n        userExperience: userExperience,\n        handleEditContent: handleEditContent,\n        handleDisplayDescription: handleDisplayDescription,\n        handleDeleteExperience: handleDeleteExperience,\n        setShowDeleteModal: setShowDeleteModal,\n        showDeleteModal: showDeleteModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Experience, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"sources":["D:/CURS Practica/Ursache_Catalin_Proiect_FInal/src/Components/Experience.js"],"names":["React","useEffect","useNavigate","Nav","Experience","handleLogout","sessionStorage","removeItem","navigate","authToken","getItem","console","log","handleDateToPresent","handleExperienceAddInputs","handleExperienceClearInputs","handleExperienceEditInputs","experienceInfoEditable","dateIsToPresent","cancelExperienceInfoEditable","handleCancelEdit","role","setRole","employer","setEmployer","city","setCity","summary","setSummary","roleValidity","setRoleValidity","employerValidity","setEmployerValidity","cityValidity","setCityValidity","summaryValidity","setSummaryValidity","clear","setClear","userExperience","handleEditContent","handleDisplayDescription","handleDeleteExperience","setShowDeleteModal","showDeleteModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,YAAY,GAAG,MAAM;AACvBC,IAAAA,cAAc,CAACC,UAAf,CAA0B,YAA1B;AACAC,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACH,GAHD;;AAIA,MAAIA,QAAQ,GAAGN,WAAW,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,SAAS,GAAGH,cAAc,CAACI,OAAf,CAAuB,YAAvB,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AACA,QAAIA,SAAJ,EAAe;AACXD,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACH;;AAED,QAAI,CAACC,SAAL,EAAgB;AACZD,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACH;AACJ,GAVQ,EAUN,EAVM,CAAT;AAWA,sBACI;AAAA,+CAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAEH,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,EAAE,EAAC,sBAAR;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,oBAAD;AAAsB,QAAA,mBAAmB,EAAEQ,mBAA3C;AACsB,QAAA,yBAAyB,EAAEC,yBADjD;AAEsB,QAAA,2BAA2B,EAAEC,2BAFnD;AAGsB,QAAA,0BAA0B,EAAEC,0BAHlD;AAIsB,QAAA,sBAAsB,EAAEC,sBAJ9C;AAKsB,QAAA,eAAe,EAAEC,eALvC;AAMsB,QAAA,4BAA4B,EAAEC,4BANpD;AAOsB,QAAA,gBAAgB,EAAEC,gBAPxC;AAQsB,QAAA,IAAI,EAAEC,IAR5B;AAQkC,QAAA,OAAO,EAAEC,OAR3C;AAQoD,QAAA,QAAQ,EAAEC,QAR9D;AAQwE,QAAA,WAAW,EAAEC,WARrF;AASsB,QAAA,IAAI,EAAEC,IAT5B;AASkC,QAAA,OAAO,EAAEC,OAT3C;AASoD,QAAA,OAAO,EAAEC,OAT7D;AASsE,QAAA,UAAU,EAAEC,UATlF;AAUsB,QAAA,YAAY,EAAEC,YAVpC;AAUkD,QAAA,eAAe,EAAEC,eAVnE;AAWsB,QAAA,gBAAgB,EAAEC,gBAXxC;AAW0D,QAAA,mBAAmB,EAAEC,mBAX/E;AAYsB,QAAA,YAAY,EAAEC,YAZpC;AAYkD,QAAA,eAAe,EAAEC,eAZnE;AAasB,QAAA,eAAe,EAAEC,eAbvC;AAawD,QAAA,kBAAkB,EAAEC,kBAb5E;AAcsB,QAAA,KAAK,EAAEC,KAd7B;AAcoC,QAAA,QAAQ,EAAEC;AAd9C;AAAA;AAAA;AAAA;AAAA,cAJJ,eAoBI,QAAC,qBAAD;AAAuB,QAAA,cAAc,EAAEC,cAAvC;AACuB,QAAA,iBAAiB,EAAEC,iBAD1C;AAEuB,QAAA,wBAAwB,EAAEC,wBAFjD;AAGuB,QAAA,sBAAsB,EAAEC,sBAH/C;AAIuB,QAAA,kBAAkB,EAAEC,kBAJ3C;AAKuB,QAAA,eAAe,EAAEC;AALxC;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GAnDuBxC,U;UAKLF,W;;;KALKE,U","sourcesContent":["import React, { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Nav from \"./Common/Nav\";\n\n\nexport default function Experience() {\n    const handleLogout = () => {\n        sessionStorage.removeItem('Auth Token');\n        navigate('/login')\n    }\n    let navigate = useNavigate();\n    useEffect(() => {\n        let authToken = sessionStorage.getItem('Auth Token')\n        console.log(authToken)\n        if (authToken) {\n            navigate('/experience')\n        }\n\n        if (!authToken) {\n            navigate('/login')\n        }\n    }, [])\n    return (\n        <div>\n            Experience Page\n            <Nav />\n            <button className='logoutbutton' onClick={handleLogout}>Log out</button>\n            <div id=\"experienceBoxContent\">\n                <div className=\"ComponentTitle\">\n                    <h1>Experience</h1>\n                </div>\n                <ExperienceBoxAddArea handleDateToPresent={handleDateToPresent}\n                                      handleExperienceAddInputs={handleExperienceAddInputs}\n                                      handleExperienceClearInputs={handleExperienceClearInputs}\n                                      handleExperienceEditInputs={handleExperienceEditInputs}\n                                      experienceInfoEditable={experienceInfoEditable}\n                                      dateIsToPresent={dateIsToPresent}\n                                      cancelExperienceInfoEditable={cancelExperienceInfoEditable}\n                                      handleCancelEdit={handleCancelEdit}\n                                      role={role} setRole={setRole} employer={employer} setEmployer={setEmployer}\n                                      city={city} setCity={setCity} summary={summary} setSummary={setSummary}\n                                      roleValidity={roleValidity} setRoleValidity={setRoleValidity}\n                                      employerValidity={employerValidity} setEmployerValidity={setEmployerValidity}\n                                      cityValidity={cityValidity} setCityValidity={setCityValidity}\n                                      summaryValidity={summaryValidity} setSummaryValidity={setSummaryValidity}\n                                      clear={clear} setClear={setClear}\n                />\n                <ExperienceBoxEditArea userExperience={userExperience}\n                                       handleEditContent={handleEditContent}\n                                       handleDisplayDescription={handleDisplayDescription}\n                                       handleDeleteExperience={handleDeleteExperience}\n                                       setShowDeleteModal={setShowDeleteModal}\n                                       showDeleteModal={showDeleteModal} />\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}